// Copyright 2024 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/testprotos/editionsfuzztest/test3.proto

package editionsfuzztest

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

type ForeignEnumProto3 int32

const (
	ForeignEnumProto3_FOREIGN_PROTO3_ZERO ForeignEnumProto3 = 0
	ForeignEnumProto3_FOREIGN_PROTO3_FOO  ForeignEnumProto3 = 4
	ForeignEnumProto3_FOREIGN_PROTO3_BAR  ForeignEnumProto3 = 5
	ForeignEnumProto3_FOREIGN_PROTO3_BAZ  ForeignEnumProto3 = 6
)

// Enum value maps for ForeignEnumProto3.
var (
	ForeignEnumProto3_name = map[int32]string{
		0: "FOREIGN_PROTO3_ZERO",
		4: "FOREIGN_PROTO3_FOO",
		5: "FOREIGN_PROTO3_BAR",
		6: "FOREIGN_PROTO3_BAZ",
	}
	ForeignEnumProto3_value = map[string]int32{
		"FOREIGN_PROTO3_ZERO": 0,
		"FOREIGN_PROTO3_FOO":  4,
		"FOREIGN_PROTO3_BAR":  5,
		"FOREIGN_PROTO3_BAZ":  6,
	}
)

func (x ForeignEnumProto3) Enum() *ForeignEnumProto3 {
	p := new(ForeignEnumProto3)
	*p = x
	return p
}

func (x ForeignEnumProto3) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForeignEnumProto3) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_testprotos_editionsfuzztest_test3_proto_enumTypes[0].Descriptor()
}

func (ForeignEnumProto3) Type() protoreflect.EnumType {
	return &file_internal_testprotos_editionsfuzztest_test3_proto_enumTypes[0]
}

func (x ForeignEnumProto3) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForeignEnumProto3.Descriptor instead.
func (ForeignEnumProto3) EnumDescriptor() ([]byte, []int) {
	return file_internal_testprotos_editionsfuzztest_test3_proto_rawDescGZIP(), []int{0}
}

type TestAllTypesProto3_NestedEnum int32

const (
	TestAllTypesProto3_FOO TestAllTypesProto3_NestedEnum = 0
	TestAllTypesProto3_BAR TestAllTypesProto3_NestedEnum = 1
	TestAllTypesProto3_BAZ TestAllTypesProto3_NestedEnum = 2
	TestAllTypesProto3_NEG TestAllTypesProto3_NestedEnum = -1 // Intentionally negative.
)

// Enum value maps for TestAllTypesProto3_NestedEnum.
var (
	TestAllTypesProto3_NestedEnum_name = map[int32]string{
		0:  "FOO",
		1:  "BAR",
		2:  "BAZ",
		-1: "NEG",
	}
	TestAllTypesProto3_NestedEnum_value = map[string]int32{
		"FOO": 0,
		"BAR": 1,
		"BAZ": 2,
		"NEG": -1,
	}
)

func (x TestAllTypesProto3_NestedEnum) Enum() *TestAllTypesProto3_NestedEnum {
	p := new(TestAllTypesProto3_NestedEnum)
	*p = x
	return p
}

func (x TestAllTypesProto3_NestedEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestAllTypesProto3_NestedEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_testprotos_editionsfuzztest_test3_proto_enumTypes[1].Descriptor()
}

func (TestAllTypesProto3_NestedEnum) Type() protoreflect.EnumType {
	return &file_internal_testprotos_editionsfuzztest_test3_proto_enumTypes[1]
}

func (x TestAllTypesProto3_NestedEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestAllTypesProto3_NestedEnum.Descriptor instead.
func (TestAllTypesProto3_NestedEnum) EnumDescriptor() ([]byte, []int) {
	return file_internal_testprotos_editionsfuzztest_test3_proto_rawDescGZIP(), []int{0, 0}
}

type TestAllTypesProto3 struct {
	state                  protoimpl.MessageState                       `protogen:"open.v1"`
	SingularInt32          int32                                        `protobuf:"varint,81,opt,name=singular_int32,json=singularInt32,proto3" json:"singular_int32,omitempty"`
	SingularInt64          int64                                        `protobuf:"varint,82,opt,name=singular_int64,json=singularInt64,proto3" json:"singular_int64,omitempty"`
	SingularUint32         uint32                                       `protobuf:"varint,83,opt,name=singular_uint32,json=singularUint32,proto3" json:"singular_uint32,omitempty"`
	SingularUint64         uint64                                       `protobuf:"varint,84,opt,name=singular_uint64,json=singularUint64,proto3" json:"singular_uint64,omitempty"`
	SingularSint32         int32                                        `protobuf:"zigzag32,85,opt,name=singular_sint32,json=singularSint32,proto3" json:"singular_sint32,omitempty"`
	SingularSint64         int64                                        `protobuf:"zigzag64,86,opt,name=singular_sint64,json=singularSint64,proto3" json:"singular_sint64,omitempty"`
	SingularFixed32        uint32                                       `protobuf:"fixed32,87,opt,name=singular_fixed32,json=singularFixed32,proto3" json:"singular_fixed32,omitempty"`
	SingularFixed64        uint64                                       `protobuf:"fixed64,88,opt,name=singular_fixed64,json=singularFixed64,proto3" json:"singular_fixed64,omitempty"`
	SingularSfixed32       int32                                        `protobuf:"fixed32,89,opt,name=singular_sfixed32,json=singularSfixed32,proto3" json:"singular_sfixed32,omitempty"`
	SingularSfixed64       int64                                        `protobuf:"fixed64,90,opt,name=singular_sfixed64,json=singularSfixed64,proto3" json:"singular_sfixed64,omitempty"`
	SingularFloat          float32                                      `protobuf:"fixed32,91,opt,name=singular_float,json=singularFloat,proto3" json:"singular_float,omitempty"`
	SingularDouble         float64                                      `protobuf:"fixed64,92,opt,name=singular_double,json=singularDouble,proto3" json:"singular_double,omitempty"`
	SingularBool           bool                                         `protobuf:"varint,93,opt,name=singular_bool,json=singularBool,proto3" json:"singular_bool,omitempty"`
	SingularString         string                                       `protobuf:"bytes,94,opt,name=singular_string,json=singularString,proto3" json:"singular_string,omitempty"`
	SingularBytes          []byte                                       `protobuf:"bytes,95,opt,name=singular_bytes,json=singularBytes,proto3" json:"singular_bytes,omitempty"`
	SingularNestedMessage  *TestAllTypesProto3_NestedMessage            `protobuf:"bytes,98,opt,name=singular_nested_message,json=singularNestedMessage,proto3" json:"singular_nested_message,omitempty"`
	SingularForeignMessage *ForeignMessageProto3                        `protobuf:"bytes,99,opt,name=singular_foreign_message,json=singularForeignMessage,proto3" json:"singular_foreign_message,omitempty"`
	SingularNestedEnum     TestAllTypesProto3_NestedEnum                `protobuf:"varint,101,opt,name=singular_nested_enum,json=singularNestedEnum,proto3,enum=goproto.proto.test.TestAllTypesProto3_NestedEnum" json:"singular_nested_enum,omitempty"`
	SingularForeignEnum    ForeignEnumProto3                            `protobuf:"varint,102,opt,name=singular_foreign_enum,json=singularForeignEnum,proto3,enum=goproto.proto.test.ForeignEnumProto3" json:"singular_foreign_enum,omitempty"`
	OptionalInt32          *int32                                       `protobuf:"varint,1,opt,name=optional_int32,json=optionalInt32,proto3,oneof" json:"optional_int32,omitempty"`
	OptionalInt64          *int64                                       `protobuf:"varint,2,opt,name=optional_int64,json=optionalInt64,proto3,oneof" json:"optional_int64,omitempty"`
	OptionalUint32         *uint32                                      `protobuf:"varint,3,opt,name=optional_uint32,json=optionalUint32,proto3,oneof" json:"optional_uint32,omitempty"`
	OptionalUint64         *uint64                                      `protobuf:"varint,4,opt,name=optional_uint64,json=optionalUint64,proto3,oneof" json:"optional_uint64,omitempty"`
	OptionalSint32         *int32                                       `protobuf:"zigzag32,5,opt,name=optional_sint32,json=optionalSint32,proto3,oneof" json:"optional_sint32,omitempty"`
	OptionalSint64         *int64                                       `protobuf:"zigzag64,6,opt,name=optional_sint64,json=optionalSint64,proto3,oneof" json:"optional_sint64,omitempty"`
	OptionalFixed32        *uint32                                      `protobuf:"fixed32,7,opt,name=optional_fixed32,json=optionalFixed32,proto3,oneof" json:"optional_fixed32,omitempty"`
	OptionalFixed64        *uint64                                      `protobuf:"fixed64,8,opt,name=optional_fixed64,json=optionalFixed64,proto3,oneof" json:"optional_fixed64,omitempty"`
	OptionalSfixed32       *int32                                       `protobuf:"fixed32,9,opt,name=optional_sfixed32,json=optionalSfixed32,proto3,oneof" json:"optional_sfixed32,omitempty"`
	OptionalSfixed64       *int64                                       `protobuf:"fixed64,10,opt,name=optional_sfixed64,json=optionalSfixed64,proto3,oneof" json:"optional_sfixed64,omitempty"`
	OptionalFloat          *float32                                     `protobuf:"fixed32,11,opt,name=optional_float,json=optionalFloat,proto3,oneof" json:"optional_float,omitempty"`
	OptionalDouble         *float64                                     `protobuf:"fixed64,12,opt,name=optional_double,json=optionalDouble,proto3,oneof" json:"optional_double,omitempty"`
	OptionalBool           *bool                                        `protobuf:"varint,13,opt,name=optional_bool,json=optionalBool,proto3,oneof" json:"optional_bool,omitempty"`
	OptionalString         *string                                      `protobuf:"bytes,14,opt,name=optional_string,json=optionalString,proto3,oneof" json:"optional_string,omitempty"`
	OptionalBytes          []byte                                       `protobuf:"bytes,15,opt,name=optional_bytes,json=optionalBytes,proto3,oneof" json:"optional_bytes,omitempty"`
	OptionalNestedMessage  *TestAllTypesProto3_NestedMessage            `protobuf:"bytes,18,opt,name=optional_nested_message,json=optionalNestedMessage,proto3,oneof" json:"optional_nested_message,omitempty"`
	OptionalForeignMessage *ForeignMessageProto3                        `protobuf:"bytes,19,opt,name=optional_foreign_message,json=optionalForeignMessage,proto3,oneof" json:"optional_foreign_message,omitempty"`
	OptionalNestedEnum     *TestAllTypesProto3_NestedEnum               `protobuf:"varint,21,opt,name=optional_nested_enum,json=optionalNestedEnum,proto3,enum=goproto.proto.test.TestAllTypesProto3_NestedEnum,oneof" json:"optional_nested_enum,omitempty"`
	OptionalForeignEnum    *ForeignEnumProto3                           `protobuf:"varint,22,opt,name=optional_foreign_enum,json=optionalForeignEnum,proto3,enum=goproto.proto.test.ForeignEnumProto3,oneof" json:"optional_foreign_enum,omitempty"`
	RepeatedInt32          []int32                                      `protobuf:"varint,31,rep,packed,name=repeated_int32,json=repeatedInt32,proto3" json:"repeated_int32,omitempty"`
	RepeatedInt64          []int64                                      `protobuf:"varint,32,rep,packed,name=repeated_int64,json=repeatedInt64,proto3" json:"repeated_int64,omitempty"`
	RepeatedUint32         []uint32                                     `protobuf:"varint,33,rep,packed,name=repeated_uint32,json=repeatedUint32,proto3" json:"repeated_uint32,omitempty"`
	RepeatedUint64         []uint64                                     `protobuf:"varint,34,rep,packed,name=repeated_uint64,json=repeatedUint64,proto3" json:"repeated_uint64,omitempty"`
	RepeatedSint32         []int32                                      `protobuf:"zigzag32,35,rep,packed,name=repeated_sint32,json=repeatedSint32,proto3" json:"repeated_sint32,omitempty"`
	RepeatedSint64         []int64                                      `protobuf:"zigzag64,36,rep,packed,name=repeated_sint64,json=repeatedSint64,proto3" json:"repeated_sint64,omitempty"`
	RepeatedFixed32        []uint32                                     `protobuf:"fixed32,37,rep,packed,name=repeated_fixed32,json=repeatedFixed32,proto3" json:"repeated_fixed32,omitempty"`
	RepeatedFixed64        []uint64                                     `protobuf:"fixed64,38,rep,packed,name=repeated_fixed64,json=repeatedFixed64,proto3" json:"repeated_fixed64,omitempty"`
	RepeatedSfixed32       []int32                                      `protobuf:"fixed32,39,rep,packed,name=repeated_sfixed32,json=repeatedSfixed32,proto3" json:"repeated_sfixed32,omitempty"`
	RepeatedSfixed64       []int64                                      `protobuf:"fixed64,40,rep,packed,name=repeated_sfixed64,json=repeatedSfixed64,proto3" json:"repeated_sfixed64,omitempty"`
	RepeatedFloat          []float32                                    `protobuf:"fixed32,41,rep,packed,name=repeated_float,json=repeatedFloat,proto3" json:"repeated_float,omitempty"`
	RepeatedDouble         []float64                                    `protobuf:"fixed64,42,rep,packed,name=repeated_double,json=repeatedDouble,proto3" json:"repeated_double,omitempty"`
	RepeatedBool           []bool                                       `protobuf:"varint,43,rep,packed,name=repeated_bool,json=repeatedBool,proto3" json:"repeated_bool,omitempty"`
	RepeatedString         []string                                     `protobuf:"bytes,44,rep,name=repeated_string,json=repeatedString,proto3" json:"repeated_string,omitempty"`
	RepeatedBytes          [][]byte                                     `protobuf:"bytes,45,rep,name=repeated_bytes,json=repeatedBytes,proto3" json:"repeated_bytes,omitempty"`
	RepeatedNestedMessage  []*TestAllTypesProto3_NestedMessage          `protobuf:"bytes,48,rep,name=repeated_nested_message,json=repeatedNestedMessage,proto3" json:"repeated_nested_message,omitempty"`
	RepeatedForeignMessage []*ForeignMessageProto3                      `protobuf:"bytes,49,rep,name=repeated_foreign_message,json=repeatedForeignMessage,proto3" json:"repeated_foreign_message,omitempty"`
	RepeatedNestedEnum     []TestAllTypesProto3_NestedEnum              `protobuf:"varint,51,rep,packed,name=repeated_nested_enum,json=repeatedNestedEnum,proto3,enum=goproto.proto.test.TestAllTypesProto3_NestedEnum" json:"repeated_nested_enum,omitempty"`
	RepeatedForeignEnum    []ForeignEnumProto3                          `protobuf:"varint,52,rep,packed,name=repeated_foreign_enum,json=repeatedForeignEnum,proto3,enum=goproto.proto.test.ForeignEnumProto3" json:"repeated_foreign_enum,omitempty"`
	MapInt32Int32          map[int32]int32                              `protobuf:"bytes,56,rep,name=map_int32_int32,json=mapInt32Int32,proto3" json:"map_int32_int32,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapInt64Int64          map[int64]int64                              `protobuf:"bytes,57,rep,name=map_int64_int64,json=mapInt64Int64,proto3" json:"map_int64_int64,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapUint32Uint32        map[uint32]uint32                            `protobuf:"bytes,58,rep,name=map_uint32_uint32,json=mapUint32Uint32,proto3" json:"map_uint32_uint32,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapUint64Uint64        map[uint64]uint64                            `protobuf:"bytes,59,rep,name=map_uint64_uint64,json=mapUint64Uint64,proto3" json:"map_uint64_uint64,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapSint32Sint32        map[int32]int32                              `protobuf:"bytes,60,rep,name=map_sint32_sint32,json=mapSint32Sint32,proto3" json:"map_sint32_sint32,omitempty" protobuf_key:"zigzag32,1,opt,name=key" protobuf_val:"zigzag32,2,opt,name=value"`
	MapSint64Sint64        map[int64]int64                              `protobuf:"bytes,61,rep,name=map_sint64_sint64,json=mapSint64Sint64,proto3" json:"map_sint64_sint64,omitempty" protobuf_key:"zigzag64,1,opt,name=key" protobuf_val:"zigzag64,2,opt,name=value"`
	MapFixed32Fixed32      map[uint32]uint32                            `protobuf:"bytes,62,rep,name=map_fixed32_fixed32,json=mapFixed32Fixed32,proto3" json:"map_fixed32_fixed32,omitempty" protobuf_key:"fixed32,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	MapFixed64Fixed64      map[uint64]uint64                            `protobuf:"bytes,63,rep,name=map_fixed64_fixed64,json=mapFixed64Fixed64,proto3" json:"map_fixed64_fixed64,omitempty" protobuf_key:"fixed64,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	MapSfixed32Sfixed32    map[int32]int32                              `protobuf:"bytes,64,rep,name=map_sfixed32_sfixed32,json=mapSfixed32Sfixed32,proto3" json:"map_sfixed32_sfixed32,omitempty" protobuf_key:"fixed32,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	MapSfixed64Sfixed64    map[int64]int64                              `protobuf:"bytes,65,rep,name=map_sfixed64_sfixed64,json=mapSfixed64Sfixed64,proto3" json:"map_sfixed64_sfixed64,omitempty" protobuf_key:"fixed64,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	MapInt32Float          map[int32]float32                            `protobuf:"bytes,66,rep,name=map_int32_float,json=mapInt32Float,proto3" json:"map_int32_float,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	MapInt32Double         map[int32]float64                            `protobuf:"bytes,67,rep,name=map_int32_double,json=mapInt32Double,proto3" json:"map_int32_double,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	MapBoolBool            map[bool]bool                                `protobuf:"bytes,68,rep,name=map_bool_bool,json=mapBoolBool,proto3" json:"map_bool_bool,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapStringString        map[string]string                            `protobuf:"bytes,69,rep,name=map_string_string,json=mapStringString,proto3" json:"map_string_string,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MapStringBytes         map[string][]byte                            `protobuf:"bytes,70,rep,name=map_string_bytes,json=mapStringBytes,proto3" json:"map_string_bytes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MapStringNestedMessage map[string]*TestAllTypesProto3_NestedMessage `protobuf:"bytes,71,rep,name=map_string_nested_message,json=mapStringNestedMessage,proto3" json:"map_string_nested_message,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MapStringNestedEnum    map[string]TestAllTypesProto3_NestedEnum     `protobuf:"bytes,73,rep,name=map_string_nested_enum,json=mapStringNestedEnum,proto3" json:"map_string_nested_enum,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=goproto.proto.test.TestAllTypesProto3_NestedEnum"`
	// Types that are valid to be assigned to OneofField:
	//
	//	*TestAllTypesProto3_OneofUint32
	//	*TestAllTypesProto3_OneofNestedMessage
	//	*TestAllTypesProto3_OneofString
	//	*TestAllTypesProto3_OneofBytes
	//	*TestAllTypesProto3_OneofBool
	//	*TestAllTypesProto3_OneofUint64
	//	*TestAllTypesProto3_OneofFloat
	//	*TestAllTypesProto3_OneofDouble
	//	*TestAllTypesProto3_OneofEnum
	OneofField    isTestAllTypesProto3_OneofField `protobuf_oneof:"oneof_field"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestAllTypesProto3) Reset() {
	*x = TestAllTypesProto3{}
	mi := &file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestAllTypesProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestAllTypesProto3) ProtoMessage() {}

func (x *TestAllTypesProto3) ProtoReflect() protoreflect.Message {
	mi := &file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestAllTypesProto3.ProtoReflect.Descriptor instead.
func (*TestAllTypesProto3) Descriptor() ([]byte, []int) {
	return file_internal_testprotos_editionsfuzztest_test3_proto_rawDescGZIP(), []int{0}
}

func (x *TestAllTypesProto3) GetSingularInt32() int32 {
	if x != nil {
		return x.SingularInt32
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularInt64() int64 {
	if x != nil {
		return x.SingularInt64
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularUint32() uint32 {
	if x != nil {
		return x.SingularUint32
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularUint64() uint64 {
	if x != nil {
		return x.SingularUint64
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularSint32() int32 {
	if x != nil {
		return x.SingularSint32
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularSint64() int64 {
	if x != nil {
		return x.SingularSint64
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularFixed32() uint32 {
	if x != nil {
		return x.SingularFixed32
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularFixed64() uint64 {
	if x != nil {
		return x.SingularFixed64
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularSfixed32() int32 {
	if x != nil {
		return x.SingularSfixed32
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularSfixed64() int64 {
	if x != nil {
		return x.SingularSfixed64
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularFloat() float32 {
	if x != nil {
		return x.SingularFloat
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularDouble() float64 {
	if x != nil {
		return x.SingularDouble
	}
	return 0
}

func (x *TestAllTypesProto3) GetSingularBool() bool {
	if x != nil {
		return x.SingularBool
	}
	return false
}

func (x *TestAllTypesProto3) GetSingularString() string {
	if x != nil {
		return x.SingularString
	}
	return ""
}

func (x *TestAllTypesProto3) GetSingularBytes() []byte {
	if x != nil {
		return x.SingularBytes
	}
	return nil
}

func (x *TestAllTypesProto3) GetSingularNestedMessage() *TestAllTypesProto3_NestedMessage {
	if x != nil {
		return x.SingularNestedMessage
	}
	return nil
}

func (x *TestAllTypesProto3) GetSingularForeignMessage() *ForeignMessageProto3 {
	if x != nil {
		return x.SingularForeignMessage
	}
	return nil
}

func (x *TestAllTypesProto3) GetSingularNestedEnum() TestAllTypesProto3_NestedEnum {
	if x != nil {
		return x.SingularNestedEnum
	}
	return TestAllTypesProto3_FOO
}

func (x *TestAllTypesProto3) GetSingularForeignEnum() ForeignEnumProto3 {
	if x != nil {
		return x.SingularForeignEnum
	}
	return ForeignEnumProto3_FOREIGN_PROTO3_ZERO
}

func (x *TestAllTypesProto3) GetOptionalInt32() int32 {
	if x != nil && x.OptionalInt32 != nil {
		return *x.OptionalInt32
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalInt64() int64 {
	if x != nil && x.OptionalInt64 != nil {
		return *x.OptionalInt64
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalUint32() uint32 {
	if x != nil && x.OptionalUint32 != nil {
		return *x.OptionalUint32
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalUint64() uint64 {
	if x != nil && x.OptionalUint64 != nil {
		return *x.OptionalUint64
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalSint32() int32 {
	if x != nil && x.OptionalSint32 != nil {
		return *x.OptionalSint32
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalSint64() int64 {
	if x != nil && x.OptionalSint64 != nil {
		return *x.OptionalSint64
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalFixed32() uint32 {
	if x != nil && x.OptionalFixed32 != nil {
		return *x.OptionalFixed32
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalFixed64() uint64 {
	if x != nil && x.OptionalFixed64 != nil {
		return *x.OptionalFixed64
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalSfixed32() int32 {
	if x != nil && x.OptionalSfixed32 != nil {
		return *x.OptionalSfixed32
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalSfixed64() int64 {
	if x != nil && x.OptionalSfixed64 != nil {
		return *x.OptionalSfixed64
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalFloat() float32 {
	if x != nil && x.OptionalFloat != nil {
		return *x.OptionalFloat
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalDouble() float64 {
	if x != nil && x.OptionalDouble != nil {
		return *x.OptionalDouble
	}
	return 0
}

func (x *TestAllTypesProto3) GetOptionalBool() bool {
	if x != nil && x.OptionalBool != nil {
		return *x.OptionalBool
	}
	return false
}

func (x *TestAllTypesProto3) GetOptionalString() string {
	if x != nil && x.OptionalString != nil {
		return *x.OptionalString
	}
	return ""
}

func (x *TestAllTypesProto3) GetOptionalBytes() []byte {
	if x != nil {
		return x.OptionalBytes
	}
	return nil
}

func (x *TestAllTypesProto3) GetOptionalNestedMessage() *TestAllTypesProto3_NestedMessage {
	if x != nil {
		return x.OptionalNestedMessage
	}
	return nil
}

func (x *TestAllTypesProto3) GetOptionalForeignMessage() *ForeignMessageProto3 {
	if x != nil {
		return x.OptionalForeignMessage
	}
	return nil
}

func (x *TestAllTypesProto3) GetOptionalNestedEnum() TestAllTypesProto3_NestedEnum {
	if x != nil && x.OptionalNestedEnum != nil {
		return *x.OptionalNestedEnum
	}
	return TestAllTypesProto3_FOO
}

func (x *TestAllTypesProto3) GetOptionalForeignEnum() ForeignEnumProto3 {
	if x != nil && x.OptionalForeignEnum != nil {
		return *x.OptionalForeignEnum
	}
	return ForeignEnumProto3_FOREIGN_PROTO3_ZERO
}

func (x *TestAllTypesProto3) GetRepeatedInt32() []int32 {
	if x != nil {
		return x.RepeatedInt32
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedInt64() []int64 {
	if x != nil {
		return x.RepeatedInt64
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedUint32() []uint32 {
	if x != nil {
		return x.RepeatedUint32
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedUint64() []uint64 {
	if x != nil {
		return x.RepeatedUint64
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedSint32() []int32 {
	if x != nil {
		return x.RepeatedSint32
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedSint64() []int64 {
	if x != nil {
		return x.RepeatedSint64
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedFixed32() []uint32 {
	if x != nil {
		return x.RepeatedFixed32
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedFixed64() []uint64 {
	if x != nil {
		return x.RepeatedFixed64
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedSfixed32() []int32 {
	if x != nil {
		return x.RepeatedSfixed32
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedSfixed64() []int64 {
	if x != nil {
		return x.RepeatedSfixed64
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedFloat() []float32 {
	if x != nil {
		return x.RepeatedFloat
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedDouble() []float64 {
	if x != nil {
		return x.RepeatedDouble
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedBool() []bool {
	if x != nil {
		return x.RepeatedBool
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedString() []string {
	if x != nil {
		return x.RepeatedString
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedBytes() [][]byte {
	if x != nil {
		return x.RepeatedBytes
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedNestedMessage() []*TestAllTypesProto3_NestedMessage {
	if x != nil {
		return x.RepeatedNestedMessage
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedForeignMessage() []*ForeignMessageProto3 {
	if x != nil {
		return x.RepeatedForeignMessage
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedNestedEnum() []TestAllTypesProto3_NestedEnum {
	if x != nil {
		return x.RepeatedNestedEnum
	}
	return nil
}

func (x *TestAllTypesProto3) GetRepeatedForeignEnum() []ForeignEnumProto3 {
	if x != nil {
		return x.RepeatedForeignEnum
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapInt32Int32() map[int32]int32 {
	if x != nil {
		return x.MapInt32Int32
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapInt64Int64() map[int64]int64 {
	if x != nil {
		return x.MapInt64Int64
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapUint32Uint32() map[uint32]uint32 {
	if x != nil {
		return x.MapUint32Uint32
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapUint64Uint64() map[uint64]uint64 {
	if x != nil {
		return x.MapUint64Uint64
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapSint32Sint32() map[int32]int32 {
	if x != nil {
		return x.MapSint32Sint32
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapSint64Sint64() map[int64]int64 {
	if x != nil {
		return x.MapSint64Sint64
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapFixed32Fixed32() map[uint32]uint32 {
	if x != nil {
		return x.MapFixed32Fixed32
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapFixed64Fixed64() map[uint64]uint64 {
	if x != nil {
		return x.MapFixed64Fixed64
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapSfixed32Sfixed32() map[int32]int32 {
	if x != nil {
		return x.MapSfixed32Sfixed32
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapSfixed64Sfixed64() map[int64]int64 {
	if x != nil {
		return x.MapSfixed64Sfixed64
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapInt32Float() map[int32]float32 {
	if x != nil {
		return x.MapInt32Float
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapInt32Double() map[int32]float64 {
	if x != nil {
		return x.MapInt32Double
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapBoolBool() map[bool]bool {
	if x != nil {
		return x.MapBoolBool
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapStringString() map[string]string {
	if x != nil {
		return x.MapStringString
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapStringBytes() map[string][]byte {
	if x != nil {
		return x.MapStringBytes
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapStringNestedMessage() map[string]*TestAllTypesProto3_NestedMessage {
	if x != nil {
		return x.MapStringNestedMessage
	}
	return nil
}

func (x *TestAllTypesProto3) GetMapStringNestedEnum() map[string]TestAllTypesProto3_NestedEnum {
	if x != nil {
		return x.MapStringNestedEnum
	}
	return nil
}

func (x *TestAllTypesProto3) GetOneofField() isTestAllTypesProto3_OneofField {
	if x != nil {
		return x.OneofField
	}
	return nil
}

func (x *TestAllTypesProto3) GetOneofUint32() uint32 {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofUint32); ok {
			return x.OneofUint32
		}
	}
	return 0
}

func (x *TestAllTypesProto3) GetOneofNestedMessage() *TestAllTypesProto3_NestedMessage {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofNestedMessage); ok {
			return x.OneofNestedMessage
		}
	}
	return nil
}

func (x *TestAllTypesProto3) GetOneofString() string {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofString); ok {
			return x.OneofString
		}
	}
	return ""
}

func (x *TestAllTypesProto3) GetOneofBytes() []byte {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofBytes); ok {
			return x.OneofBytes
		}
	}
	return nil
}

func (x *TestAllTypesProto3) GetOneofBool() bool {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofBool); ok {
			return x.OneofBool
		}
	}
	return false
}

func (x *TestAllTypesProto3) GetOneofUint64() uint64 {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofUint64); ok {
			return x.OneofUint64
		}
	}
	return 0
}

func (x *TestAllTypesProto3) GetOneofFloat() float32 {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofFloat); ok {
			return x.OneofFloat
		}
	}
	return 0
}

func (x *TestAllTypesProto3) GetOneofDouble() float64 {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofDouble); ok {
			return x.OneofDouble
		}
	}
	return 0
}

func (x *TestAllTypesProto3) GetOneofEnum() TestAllTypesProto3_NestedEnum {
	if x != nil {
		if x, ok := x.OneofField.(*TestAllTypesProto3_OneofEnum); ok {
			return x.OneofEnum
		}
	}
	return TestAllTypesProto3_FOO
}

type isTestAllTypesProto3_OneofField interface {
	isTestAllTypesProto3_OneofField()
}

type TestAllTypesProto3_OneofUint32 struct {
	OneofUint32 uint32 `protobuf:"varint,111,opt,name=oneof_uint32,json=oneofUint32,proto3,oneof"`
}

type TestAllTypesProto3_OneofNestedMessage struct {
	OneofNestedMessage *TestAllTypesProto3_NestedMessage `protobuf:"bytes,112,opt,name=oneof_nested_message,json=oneofNestedMessage,proto3,oneof"`
}

type TestAllTypesProto3_OneofString struct {
	OneofString string `protobuf:"bytes,113,opt,name=oneof_string,json=oneofString,proto3,oneof"`
}

type TestAllTypesProto3_OneofBytes struct {
	OneofBytes []byte `protobuf:"bytes,114,opt,name=oneof_bytes,json=oneofBytes,proto3,oneof"`
}

type TestAllTypesProto3_OneofBool struct {
	OneofBool bool `protobuf:"varint,115,opt,name=oneof_bool,json=oneofBool,proto3,oneof"`
}

type TestAllTypesProto3_OneofUint64 struct {
	OneofUint64 uint64 `protobuf:"varint,116,opt,name=oneof_uint64,json=oneofUint64,proto3,oneof"`
}

type TestAllTypesProto3_OneofFloat struct {
	OneofFloat float32 `protobuf:"fixed32,117,opt,name=oneof_float,json=oneofFloat,proto3,oneof"`
}

type TestAllTypesProto3_OneofDouble struct {
	OneofDouble float64 `protobuf:"fixed64,118,opt,name=oneof_double,json=oneofDouble,proto3,oneof"`
}

type TestAllTypesProto3_OneofEnum struct {
	OneofEnum TestAllTypesProto3_NestedEnum `protobuf:"varint,119,opt,name=oneof_enum,json=oneofEnum,proto3,enum=goproto.proto.test.TestAllTypesProto3_NestedEnum,oneof"`
}

func (*TestAllTypesProto3_OneofUint32) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofNestedMessage) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofString) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofBytes) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofBool) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofUint64) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofFloat) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofDouble) isTestAllTypesProto3_OneofField() {}

func (*TestAllTypesProto3_OneofEnum) isTestAllTypesProto3_OneofField() {}

type ForeignMessageProto3 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	C             int32                  `protobuf:"varint,1,opt,name=c,proto3" json:"c,omitempty"`
	D             int32                  `protobuf:"varint,2,opt,name=d,proto3" json:"d,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForeignMessageProto3) Reset() {
	*x = ForeignMessageProto3{}
	mi := &file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForeignMessageProto3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForeignMessageProto3) ProtoMessage() {}

func (x *ForeignMessageProto3) ProtoReflect() protoreflect.Message {
	mi := &file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForeignMessageProto3.ProtoReflect.Descriptor instead.
func (*ForeignMessageProto3) Descriptor() ([]byte, []int) {
	return file_internal_testprotos_editionsfuzztest_test3_proto_rawDescGZIP(), []int{1}
}

func (x *ForeignMessageProto3) GetC() int32 {
	if x != nil {
		return x.C
	}
	return 0
}

func (x *ForeignMessageProto3) GetD() int32 {
	if x != nil {
		return x.D
	}
	return 0
}

type TestAllTypesProto3_NestedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	A             int32                  `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	Corecursive   *TestAllTypesProto3    `protobuf:"bytes,2,opt,name=corecursive,proto3" json:"corecursive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestAllTypesProto3_NestedMessage) Reset() {
	*x = TestAllTypesProto3_NestedMessage{}
	mi := &file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestAllTypesProto3_NestedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestAllTypesProto3_NestedMessage) ProtoMessage() {}

func (x *TestAllTypesProto3_NestedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestAllTypesProto3_NestedMessage.ProtoReflect.Descriptor instead.
func (*TestAllTypesProto3_NestedMessage) Descriptor() ([]byte, []int) {
	return file_internal_testprotos_editionsfuzztest_test3_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TestAllTypesProto3_NestedMessage) GetA() int32 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *TestAllTypesProto3_NestedMessage) GetCorecursive() *TestAllTypesProto3 {
	if x != nil {
		return x.Corecursive
	}
	return nil
}

var File_internal_testprotos_editionsfuzztest_test3_proto protoreflect.FileDescriptor

const file_internal_testprotos_editionsfuzztest_test3_proto_rawDesc = "\n0internal/testprotos/editionsfuzztest/test3.protogoproto.proto.test\"\xf68\nTestAllTypesProto3%\nsingular_int32Q (R\rsingularInt32%\nsingular_int64R (R\rsingularInt64'\nsingular_uint32S (\rRsingularUint32'\nsingular_uint64T (RsingularUint64'\nsingular_sint32U (RsingularSint32'\nsingular_sint64V (RsingularSint64)\nsingular_fixed32W (RsingularFixed32)\nsingular_fixed64X (RsingularFixed64+\nsingular_sfixed32Y (RsingularSfixed32+\nsingular_sfixed64Z (RsingularSfixed64%\nsingular_float[ (R\rsingularFloat'\nsingular_double\\ (RsingularDouble#\n\rsingular_bool] (RsingularBool'\nsingular_string^ (	RsingularString%\nsingular_bytes_ (R\rsingularBytesl\nsingular_nested_messageb (24.goproto.proto.test.TestAllTypesProto3.NestedMessageRsingularNestedMessageb\nsingular_foreign_messagec (2(.goproto.proto.test.ForeignMessageProto3RsingularForeignMessagec\nsingular_nested_enume (21.goproto.proto.test.TestAllTypesProto3.NestedEnumRsingularNestedEnumY\nsingular_foreign_enumf (2%.goproto.proto.test.ForeignEnumProto3RsingularForeignEnum*\noptional_int32 (HR\roptionalInt32\x88*\noptional_int64 (HR\roptionalInt64\x88,\noptional_uint32 (\rHRoptionalUint32\x88,\noptional_uint64 (HRoptionalUint64\x88,\noptional_sint32 (HRoptionalSint32\x88,\noptional_sint64 (HRoptionalSint64\x88.\noptional_fixed32 (HRoptionalFixed32\x88.\noptional_fixed64 (HRoptionalFixed64\x880\noptional_sfixed32	 (H	RoptionalSfixed32\x880\noptional_sfixed64\n (H\nRoptionalSfixed64\x88*\noptional_float (HR\roptionalFloat\x88,\noptional_double (HRoptionalDouble\x88(\n\roptional_bool\r (H\rRoptionalBool\x88,\noptional_string (	HRoptionalString\x88*\noptional_bytes (HR\roptionalBytes\x88q\noptional_nested_message (24.goproto.proto.test.TestAllTypesProto3.NestedMessageHRoptionalNestedMessage\x88g\noptional_foreign_message (2(.goproto.proto.test.ForeignMessageProto3HRoptionalForeignMessage\x88h\noptional_nested_enum (21.goproto.proto.test.TestAllTypesProto3.NestedEnumHRoptionalNestedEnum\x88^\noptional_foreign_enum (2%.goproto.proto.test.ForeignEnumProto3HRoptionalForeignEnum\x88%\nrepeated_int32 (R\rrepeatedInt32%\nrepeated_int64  (R\rrepeatedInt64'\nrepeated_uint32! (\rRrepeatedUint32'\nrepeated_uint64\" (RrepeatedUint64'\nrepeated_sint32# (RrepeatedSint32'\nrepeated_sint64$ (RrepeatedSint64)\nrepeated_fixed32% (RrepeatedFixed32)\nrepeated_fixed64& (RrepeatedFixed64+\nrepeated_sfixed32' (RrepeatedSfixed32+\nrepeated_sfixed64( (RrepeatedSfixed64%\nrepeated_float) (R\rrepeatedFloat'\nrepeated_double* (RrepeatedDouble#\n\rrepeated_bool+ (RrepeatedBool'\nrepeated_string, (	RrepeatedString%\nrepeated_bytes- (R\rrepeatedBytesl\nrepeated_nested_message0 (24.goproto.proto.test.TestAllTypesProto3.NestedMessageRrepeatedNestedMessageb\nrepeated_foreign_message1 (2(.goproto.proto.test.ForeignMessageProto3RrepeatedForeignMessagec\nrepeated_nested_enum3 (21.goproto.proto.test.TestAllTypesProto3.NestedEnumRrepeatedNestedEnumY\nrepeated_foreign_enum4 (2%.goproto.proto.test.ForeignEnumProto3RrepeatedForeignEnuma\nmap_int32_int328 (29.goproto.proto.test.TestAllTypesProto3.MapInt32Int32EntryR\rmapInt32Int32a\nmap_int64_int649 (29.goproto.proto.test.TestAllTypesProto3.MapInt64Int64EntryR\rmapInt64Int64g\nmap_uint32_uint32: (2;.goproto.proto.test.TestAllTypesProto3.MapUint32Uint32EntryRmapUint32Uint32g\nmap_uint64_uint64; (2;.goproto.proto.test.TestAllTypesProto3.MapUint64Uint64EntryRmapUint64Uint64g\nmap_sint32_sint32< (2;.goproto.proto.test.TestAllTypesProto3.MapSint32Sint32EntryRmapSint32Sint32g\nmap_sint64_sint64= (2;.goproto.proto.test.TestAllTypesProto3.MapSint64Sint64EntryRmapSint64Sint64m\nmap_fixed32_fixed32> (2=.goproto.proto.test.TestAllTypesProto3.MapFixed32Fixed32EntryRmapFixed32Fixed32m\nmap_fixed64_fixed64? (2=.goproto.proto.test.TestAllTypesProto3.MapFixed64Fixed64EntryRmapFixed64Fixed64s\nmap_sfixed32_sfixed32@ (2?.goproto.proto.test.TestAllTypesProto3.MapSfixed32Sfixed32EntryRmapSfixed32Sfixed32s\nmap_sfixed64_sfixed64A (2?.goproto.proto.test.TestAllTypesProto3.MapSfixed64Sfixed64EntryRmapSfixed64Sfixed64a\nmap_int32_floatB (29.goproto.proto.test.TestAllTypesProto3.MapInt32FloatEntryR\rmapInt32Floatd\nmap_int32_doubleC (2:.goproto.proto.test.TestAllTypesProto3.MapInt32DoubleEntryRmapInt32Double[\n\rmap_bool_boolD (27.goproto.proto.test.TestAllTypesProto3.MapBoolBoolEntryRmapBoolBoolg\nmap_string_stringE (2;.goproto.proto.test.TestAllTypesProto3.MapStringStringEntryRmapStringStringd\nmap_string_bytesF (2:.goproto.proto.test.TestAllTypesProto3.MapStringBytesEntryRmapStringBytes}\nmap_string_nested_messageG (2B.goproto.proto.test.TestAllTypesProto3.MapStringNestedMessageEntryRmapStringNestedMessaget\nmap_string_nested_enumI (2?.goproto.proto.test.TestAllTypesProto3.MapStringNestedEnumEntryRmapStringNestedEnum#\noneof_uint32o (\rH\x00RoneofUint32h\noneof_nested_messagep (24.goproto.proto.test.TestAllTypesProto3.NestedMessageH\x00RoneofNestedMessage#\noneof_stringq (	H\x00RoneofString!\noneof_bytesr (H\x00R\noneofBytes\n\noneof_bools (H\x00R	oneofBool#\noneof_uint64t (H\x00RoneofUint64!\noneof_floatu (H\x00R\noneofFloat#\noneof_doublev (H\x00RoneofDoubleR\n\noneof_enumw (21.goproto.proto.test.TestAllTypesProto3.NestedEnumH\x00R	oneofEnumg\n\rNestedMessage\na (RaH\ncorecursive (2&.goproto.proto.test.TestAllTypesProto3Rcorecursive@\nMapInt32Int32Entry\nkey (Rkey\nvalue (Rvalue:8@\nMapInt64Int64Entry\nkey (Rkey\nvalue (Rvalue:8B\nMapUint32Uint32Entry\nkey (\rRkey\nvalue (\rRvalue:8B\nMapUint64Uint64Entry\nkey (Rkey\nvalue (Rvalue:8B\nMapSint32Sint32Entry\nkey (Rkey\nvalue (Rvalue:8B\nMapSint64Sint64Entry\nkey (Rkey\nvalue (Rvalue:8D\nMapFixed32Fixed32Entry\nkey (Rkey\nvalue (Rvalue:8D\nMapFixed64Fixed64Entry\nkey (Rkey\nvalue (Rvalue:8F\nMapSfixed32Sfixed32Entry\nkey (Rkey\nvalue (Rvalue:8F\nMapSfixed64Sfixed64Entry\nkey (Rkey\nvalue (Rvalue:8@\nMapInt32FloatEntry\nkey (Rkey\nvalue (Rvalue:8A\nMapInt32DoubleEntry\nkey (Rkey\nvalue (Rvalue:8>\nMapBoolBoolEntry\nkey (Rkey\nvalue (Rvalue:8B\nMapStringStringEntry\nkey (	Rkey\nvalue (	Rvalue:8A\nMapStringBytesEntry\nkey (	Rkey\nvalue (Rvalue:8\nMapStringNestedMessageEntry\nkey (	RkeyJ\nvalue (24.goproto.proto.test.TestAllTypesProto3.NestedMessageRvalue:8y\nMapStringNestedEnumEntry\nkey (	RkeyG\nvalue (21.goproto.proto.test.TestAllTypesProto3.NestedEnumRvalue:8\"9\n\nNestedEnum\nFOO\x00\nBAR\nBAZ\nNEG\xff\xff\xff\xff\xff\xff\xff\xff\xffB\r\noneof_fieldB\n_optional_int32B\n_optional_int64B\n_optional_uint32B\n_optional_uint64B\n_optional_sint32B\n_optional_sint64B\n_optional_fixed32B\n_optional_fixed64B\n_optional_sfixed32B\n_optional_sfixed64B\n_optional_floatB\n_optional_doubleB\n_optional_boolB\n_optional_stringB\n_optional_bytesB\n_optional_nested_messageB\n_optional_foreign_messageB\n_optional_nested_enumB\n_optional_foreign_enum\"2\nForeignMessageProto3\nc (Rc\nd (Rd*t\nForeignEnumProto3\nFOREIGN_PROTO3_ZERO\x00\nFOREIGN_PROTO3_FOO\nFOREIGN_PROTO3_BAR\nFOREIGN_PROTO3_BAZBAZ?google.golang.org/protobuf/internal/testprotos/editionsfuzztestbproto3"

var (
	file_internal_testprotos_editionsfuzztest_test3_proto_rawDescOnce sync.Once
	file_internal_testprotos_editionsfuzztest_test3_proto_rawDescData = file_internal_testprotos_editionsfuzztest_test3_proto_rawDesc
)

func file_internal_testprotos_editionsfuzztest_test3_proto_rawDescGZIP() []byte {
	file_internal_testprotos_editionsfuzztest_test3_proto_rawDescOnce.Do(func() {
		file_internal_testprotos_editionsfuzztest_test3_proto_rawDescData = string(protoimpl.X.CompressGZIP([]byte(file_internal_testprotos_editionsfuzztest_test3_proto_rawDescData)))
	})
	return []byte(file_internal_testprotos_editionsfuzztest_test3_proto_rawDescData)
}

var file_internal_testprotos_editionsfuzztest_test3_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_internal_testprotos_editionsfuzztest_test3_proto_goTypes = []any{
	(ForeignEnumProto3)(0),                   // 0: goproto.proto.test.ForeignEnumProto3
	(TestAllTypesProto3_NestedEnum)(0),       // 1: goproto.proto.test.TestAllTypesProto3.NestedEnum
	(*TestAllTypesProto3)(nil),               // 2: goproto.proto.test.TestAllTypesProto3
	(*ForeignMessageProto3)(nil),             // 3: goproto.proto.test.ForeignMessageProto3
	(*TestAllTypesProto3_NestedMessage)(nil), // 4: goproto.proto.test.TestAllTypesProto3.NestedMessage
	nil,                                      // 5: goproto.proto.test.TestAllTypesProto3.MapInt32Int32Entry
	nil,                                      // 6: goproto.proto.test.TestAllTypesProto3.MapInt64Int64Entry
	nil,                                      // 7: goproto.proto.test.TestAllTypesProto3.MapUint32Uint32Entry
	nil,                                      // 8: goproto.proto.test.TestAllTypesProto3.MapUint64Uint64Entry
	nil,                                      // 9: goproto.proto.test.TestAllTypesProto3.MapSint32Sint32Entry
	nil,                                      // 10: goproto.proto.test.TestAllTypesProto3.MapSint64Sint64Entry
	nil,                                      // 11: goproto.proto.test.TestAllTypesProto3.MapFixed32Fixed32Entry
	nil,                                      // 12: goproto.proto.test.TestAllTypesProto3.MapFixed64Fixed64Entry
	nil,                                      // 13: goproto.proto.test.TestAllTypesProto3.MapSfixed32Sfixed32Entry
	nil,                                      // 14: goproto.proto.test.TestAllTypesProto3.MapSfixed64Sfixed64Entry
	nil,                                      // 15: goproto.proto.test.TestAllTypesProto3.MapInt32FloatEntry
	nil,                                      // 16: goproto.proto.test.TestAllTypesProto3.MapInt32DoubleEntry
	nil,                                      // 17: goproto.proto.test.TestAllTypesProto3.MapBoolBoolEntry
	nil,                                      // 18: goproto.proto.test.TestAllTypesProto3.MapStringStringEntry
	nil,                                      // 19: goproto.proto.test.TestAllTypesProto3.MapStringBytesEntry
	nil,                                      // 20: goproto.proto.test.TestAllTypesProto3.MapStringNestedMessageEntry
	nil,                                      // 21: goproto.proto.test.TestAllTypesProto3.MapStringNestedEnumEntry
}
var file_internal_testprotos_editionsfuzztest_test3_proto_depIdxs = []int32{
	4,  // 0: goproto.proto.test.TestAllTypesProto3.singular_nested_message:type_name -> goproto.proto.test.TestAllTypesProto3.NestedMessage
	3,  // 1: goproto.proto.test.TestAllTypesProto3.singular_foreign_message:type_name -> goproto.proto.test.ForeignMessageProto3
	1,  // 2: goproto.proto.test.TestAllTypesProto3.singular_nested_enum:type_name -> goproto.proto.test.TestAllTypesProto3.NestedEnum
	0,  // 3: goproto.proto.test.TestAllTypesProto3.singular_foreign_enum:type_name -> goproto.proto.test.ForeignEnumProto3
	4,  // 4: goproto.proto.test.TestAllTypesProto3.optional_nested_message:type_name -> goproto.proto.test.TestAllTypesProto3.NestedMessage
	3,  // 5: goproto.proto.test.TestAllTypesProto3.optional_foreign_message:type_name -> goproto.proto.test.ForeignMessageProto3
	1,  // 6: goproto.proto.test.TestAllTypesProto3.optional_nested_enum:type_name -> goproto.proto.test.TestAllTypesProto3.NestedEnum
	0,  // 7: goproto.proto.test.TestAllTypesProto3.optional_foreign_enum:type_name -> goproto.proto.test.ForeignEnumProto3
	4,  // 8: goproto.proto.test.TestAllTypesProto3.repeated_nested_message:type_name -> goproto.proto.test.TestAllTypesProto3.NestedMessage
	3,  // 9: goproto.proto.test.TestAllTypesProto3.repeated_foreign_message:type_name -> goproto.proto.test.ForeignMessageProto3
	1,  // 10: goproto.proto.test.TestAllTypesProto3.repeated_nested_enum:type_name -> goproto.proto.test.TestAllTypesProto3.NestedEnum
	0,  // 11: goproto.proto.test.TestAllTypesProto3.repeated_foreign_enum:type_name -> goproto.proto.test.ForeignEnumProto3
	5,  // 12: goproto.proto.test.TestAllTypesProto3.map_int32_int32:type_name -> goproto.proto.test.TestAllTypesProto3.MapInt32Int32Entry
	6,  // 13: goproto.proto.test.TestAllTypesProto3.map_int64_int64:type_name -> goproto.proto.test.TestAllTypesProto3.MapInt64Int64Entry
	7,  // 14: goproto.proto.test.TestAllTypesProto3.map_uint32_uint32:type_name -> goproto.proto.test.TestAllTypesProto3.MapUint32Uint32Entry
	8,  // 15: goproto.proto.test.TestAllTypesProto3.map_uint64_uint64:type_name -> goproto.proto.test.TestAllTypesProto3.MapUint64Uint64Entry
	9,  // 16: goproto.proto.test.TestAllTypesProto3.map_sint32_sint32:type_name -> goproto.proto.test.TestAllTypesProto3.MapSint32Sint32Entry
	10, // 17: goproto.proto.test.TestAllTypesProto3.map_sint64_sint64:type_name -> goproto.proto.test.TestAllTypesProto3.MapSint64Sint64Entry
	11, // 18: goproto.proto.test.TestAllTypesProto3.map_fixed32_fixed32:type_name -> goproto.proto.test.TestAllTypesProto3.MapFixed32Fixed32Entry
	12, // 19: goproto.proto.test.TestAllTypesProto3.map_fixed64_fixed64:type_name -> goproto.proto.test.TestAllTypesProto3.MapFixed64Fixed64Entry
	13, // 20: goproto.proto.test.TestAllTypesProto3.map_sfixed32_sfixed32:type_name -> goproto.proto.test.TestAllTypesProto3.MapSfixed32Sfixed32Entry
	14, // 21: goproto.proto.test.TestAllTypesProto3.map_sfixed64_sfixed64:type_name -> goproto.proto.test.TestAllTypesProto3.MapSfixed64Sfixed64Entry
	15, // 22: goproto.proto.test.TestAllTypesProto3.map_int32_float:type_name -> goproto.proto.test.TestAllTypesProto3.MapInt32FloatEntry
	16, // 23: goproto.proto.test.TestAllTypesProto3.map_int32_double:type_name -> goproto.proto.test.TestAllTypesProto3.MapInt32DoubleEntry
	17, // 24: goproto.proto.test.TestAllTypesProto3.map_bool_bool:type_name -> goproto.proto.test.TestAllTypesProto3.MapBoolBoolEntry
	18, // 25: goproto.proto.test.TestAllTypesProto3.map_string_string:type_name -> goproto.proto.test.TestAllTypesProto3.MapStringStringEntry
	19, // 26: goproto.proto.test.TestAllTypesProto3.map_string_bytes:type_name -> goproto.proto.test.TestAllTypesProto3.MapStringBytesEntry
	20, // 27: goproto.proto.test.TestAllTypesProto3.map_string_nested_message:type_name -> goproto.proto.test.TestAllTypesProto3.MapStringNestedMessageEntry
	21, // 28: goproto.proto.test.TestAllTypesProto3.map_string_nested_enum:type_name -> goproto.proto.test.TestAllTypesProto3.MapStringNestedEnumEntry
	4,  // 29: goproto.proto.test.TestAllTypesProto3.oneof_nested_message:type_name -> goproto.proto.test.TestAllTypesProto3.NestedMessage
	1,  // 30: goproto.proto.test.TestAllTypesProto3.oneof_enum:type_name -> goproto.proto.test.TestAllTypesProto3.NestedEnum
	2,  // 31: goproto.proto.test.TestAllTypesProto3.NestedMessage.corecursive:type_name -> goproto.proto.test.TestAllTypesProto3
	4,  // 32: goproto.proto.test.TestAllTypesProto3.MapStringNestedMessageEntry.value:type_name -> goproto.proto.test.TestAllTypesProto3.NestedMessage
	1,  // 33: goproto.proto.test.TestAllTypesProto3.MapStringNestedEnumEntry.value:type_name -> goproto.proto.test.TestAllTypesProto3.NestedEnum
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_internal_testprotos_editionsfuzztest_test3_proto_init() }
func file_internal_testprotos_editionsfuzztest_test3_proto_init() {
	if File_internal_testprotos_editionsfuzztest_test3_proto != nil {
		return
	}
	file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes[0].OneofWrappers = []any{
		(*TestAllTypesProto3_OneofUint32)(nil),
		(*TestAllTypesProto3_OneofNestedMessage)(nil),
		(*TestAllTypesProto3_OneofString)(nil),
		(*TestAllTypesProto3_OneofBytes)(nil),
		(*TestAllTypesProto3_OneofBool)(nil),
		(*TestAllTypesProto3_OneofUint64)(nil),
		(*TestAllTypesProto3_OneofFloat)(nil),
		(*TestAllTypesProto3_OneofDouble)(nil),
		(*TestAllTypesProto3_OneofEnum)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: []byte(file_internal_testprotos_editionsfuzztest_test3_proto_rawDesc),
			NumEnums:      2,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_testprotos_editionsfuzztest_test3_proto_goTypes,
		DependencyIndexes: file_internal_testprotos_editionsfuzztest_test3_proto_depIdxs,
		EnumInfos:         file_internal_testprotos_editionsfuzztest_test3_proto_enumTypes,
		MessageInfos:      file_internal_testprotos_editionsfuzztest_test3_proto_msgTypes,
	}.Build()
	File_internal_testprotos_editionsfuzztest_test3_proto = out.File
	file_internal_testprotos_editionsfuzztest_test3_proto_goTypes = nil
	file_internal_testprotos_editionsfuzztest_test3_proto_depIdxs = nil
}
